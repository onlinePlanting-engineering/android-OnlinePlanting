package com.planting.online.onlineplanting.Dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.planting.online.onlineplanting.Entity.Comment;
import com.planting.online.onlineplanting.Entity.Farm;
import com.planting.online.onlineplanting.Entity.ImageGroup;
import com.planting.online.onlineplanting.Entity.Land;
import com.planting.online.onlineplanting.Entity.User;

import com.planting.online.onlineplanting.Dao.CommentDao;
import com.planting.online.onlineplanting.Dao.FarmDao;
import com.planting.online.onlineplanting.Dao.ImageGroupDao;
import com.planting.online.onlineplanting.Dao.LandDao;
import com.planting.online.onlineplanting.Dao.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig commentDaoConfig;
    private final DaoConfig farmDaoConfig;
    private final DaoConfig imageGroupDaoConfig;
    private final DaoConfig landDaoConfig;
    private final DaoConfig userDaoConfig;

    private final CommentDao commentDao;
    private final FarmDao farmDao;
    private final ImageGroupDao imageGroupDao;
    private final LandDao landDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        farmDaoConfig = daoConfigMap.get(FarmDao.class).clone();
        farmDaoConfig.initIdentityScope(type);

        imageGroupDaoConfig = daoConfigMap.get(ImageGroupDao.class).clone();
        imageGroupDaoConfig.initIdentityScope(type);

        landDaoConfig = daoConfigMap.get(LandDao.class).clone();
        landDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        commentDao = new CommentDao(commentDaoConfig, this);
        farmDao = new FarmDao(farmDaoConfig, this);
        imageGroupDao = new ImageGroupDao(imageGroupDaoConfig, this);
        landDao = new LandDao(landDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Comment.class, commentDao);
        registerDao(Farm.class, farmDao);
        registerDao(ImageGroup.class, imageGroupDao);
        registerDao(Land.class, landDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        commentDaoConfig.clearIdentityScope();
        farmDaoConfig.clearIdentityScope();
        imageGroupDaoConfig.clearIdentityScope();
        landDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

    public FarmDao getFarmDao() {
        return farmDao;
    }

    public ImageGroupDao getImageGroupDao() {
        return imageGroupDao;
    }

    public LandDao getLandDao() {
        return landDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
